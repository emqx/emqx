emqx_bridge_gcp_pubsub {

connect_timeout.desc:
"""The timeout when connecting to the HTTP server."""

connect_timeout.label:
"""Connect Timeout"""

desc_config.desc:
"""Configuration for a GCP PubSub bridge."""

desc_config.label:
"""GCP PubSub Configuration"""

desc_name.desc:
"""Action name, used as a human-readable identifier."""

desc_name.label:
"""Action Name"""

desc_type.desc:
"""The action type."""

desc_type.label:
"""Action Type"""

max_retries.desc:
"""Max retry times if an error occurs when sending a request."""

max_retries.label:
"""Max Retries"""

payload_template.desc:
"""The template for formatting the outgoing messages.  If undefined, will send all the available context in JSON format."""

payload_template.label:
"""Payload template"""

attributes_template.desc:
"""The template for formatting the outgoing message attributes.  Undefined values will be rendered as empty string values.  Empty keys are removed from the attribute map."""

attributes_template.label:
"""Attributes template"""

ordering_key_template.desc:
"""The template for formatting the outgoing message ordering key.  Undefined values will be rendered as empty string values.  This value will not be added to the message if it's empty."""

ordering_key_template.label:
"""Ordering Key template"""

pipelining.desc:
"""A positive integer. Whether to send HTTP requests continuously, when set to 1, it means that after each HTTP request is sent, you need to wait for the server to return and then continue to send the next request."""

pipelining.label:
"""HTTP Pipelining"""

pool_size.desc:
"""The pool size."""

pool_size.label:
"""Pool Size"""

pubsub_topic.desc:
"""The GCP PubSub topic to publish messages to."""

pubsub_topic.label:
"""GCP PubSub Topic"""

producer_attributes.desc:
"""List of key-value pairs representing templates to construct the attributes for a given GCP PubSub message.  Both keys and values support the placeholder `${var_name}` notation.  Keys that are undefined or resolve to an empty string are omitted from the attribute map."""

producer_attributes.label:
"""Attributes Template"""

producer_ordering_key.desc:
"""Template for the Ordering Key of a given GCP PubSub message.  If the resolved value is undefined or an empty string, the ordering key property is omitted from the message."""

producer_ordering_key.label:
"""Ordering Key Template"""

kv_pair_desc.desc:
"""Key-value pair."""

kv_pair_desc.label:
"""Key-value pair"""

kv_pair_key.desc:
"""Key"""

kv_pair_key.label:
"""Key"""

kv_pair_value.desc:
"""Value"""

kv_pair_value.label:
"""Value"""

service_account_json.desc:
"""JSON containing the GCP Service Account credentials to be used with PubSub.
When a GCP Service Account is created (as described in https://developers.google.com/identity/protocols/oauth2/service-account#creatinganaccount), you have the option of downloading the credentials in JSON form.

You can provide the credentials in two ways:
1. Inline: Paste the entire JSON content directly
2. File reference: Use `file://path/to/service_account.json` to reference a file containing the credentials"""

service_account_json.label:
"""GCP Service Account Credentials"""

  consumer_opts {
    desc: "Local MQTT publish and GCP PubSub consumer configs."
    label: "GCP PubSub to MQTT"
  }

  consumer_pull_max_messages {
    desc: "The maximum number of messages to retrieve from GCP PubSub in a single pull request."
          " The actual number may be less than the specified value."
    label: "Maximum Messages to Pull"
  }

  consumer_pubsub_topic {
    desc: "GCP PubSub topic to consume from."
    label: "GCP PubSub"
  }

  consumer_mqtt_topic {
    desc: "Local topic to which consumed GCP PubSub messages should be published to."
    label: "MQTT Topic"
  }

  consumer_mqtt_qos {
    desc: "MQTT QoS level applied when publishing messages that are consumed from GCP PubSub."
    label: "QoS"
  }

consumer_mqtt_payload.desc:
"""The template for transforming the incoming GCP PubSub message.  By default, it will use JSON format to serialize inputs from the GCP PubSub message.  Available fields are:
<code>message_id</code>: the message ID assigned by GCP PubSub.
<code>publish_time</code>: message timestamp assigned by GCP PubSub.
<code>topic</code>: GCP PubSub topic.
<code>value</code>: the payload of the GCP PubSub message.  Omitted if there's no payload.
<code>attributes</code>: an object containing string key-value pairs.  Omitted if there are no attributes.
<code>ordering_key</code>: GCP PubSub message ordering key.  Omitted if there's none."""

consumer_mqtt_payload.label:
"Payload Template"

  consumer {
    desc: "GCP PubSub Consumer configuration."
    label: "GCP PubSub Consumer"
  }

}
