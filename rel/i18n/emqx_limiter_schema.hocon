emqx_limiter_schema {

max_conn_rate.desc:
"""Used to limit the rate at which the current listener accepts connections.

Once the limit is reached, EMQX will pause fetching connections from the Accept queue, thereby delaying or rejecting new connections.

For example:

- `1000/s`: Only accepts 1000 connections per second.
- `1000/10s`: Only accepts 1000 connections every 10 seconds."""

max_conn_rate.label:
"""Maximum Connection Rate"""

max_conn_burst.desc:
"""Number of connections that can be accepted in a burst.

For example: `10000/60m`: Once in 60 minutes, up to 10000 connections can be accepted in a short period of time."""

max_conn_burst.label:
"""Maximum Connection Burst"""

messages_rate.desc:
"""Used to limit the number of messages a single client can send to EMQX per second.

Once the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.

For example:

- `500/s`: Only 500 messages will be received per second, and the remaining messages will be delayed.
- `500/10s`: Only 500 messages will be received every 10 seconds and the remaining messages will be delayed."""

messages_rate.label:
"""Messages Publish Rate"""

messages_burst.desc:
"""Number of messages that can be sent in a burst.

For example: `10000/60m`: Once in 60 minutes, up to 10000 messages can be sent in a short period of time."""

messages_burst.label:
"""Messages Publish Burst"""

bytes_rate.desc:
"""Used to limit the number of bytes a single client can send to EMQX per second.

Once the limit is reached, EMQX will pause reading data from the receive-buffer, thus slowing down or even temporarily hanging the sender.

The unit of the bytes could be: B, KB, MB, GB.

For example:

- `500KB/s`: Only 500 kilobytes per second will be received, and the remaining bytes will be delayed.
- `500MB/10s`: Only 500 megabytes will be received every 10 seconds, and the remaining bytes will be delayed."""

bytes_rate.label:
"""Data Publish Rate"""

bytes_burst.desc:
"""Number of bytes that can be sent in a burst.

For example: `100MB/60m`: Once in 60 minutes, up to 100 megabytes can be sent in a short period of time."""

bytes_burst.label:
"""Data Publish Burst"""

mqtt.desc:
"""MQTT related limiters."""

alloc_interval.desc:
"""Token allocation interval for shared limiter."""

burst.desc:
"""How many tokens are allowed when the rate is exceeded."""

}
