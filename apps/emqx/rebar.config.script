%% -*- mode: erlang -*-

NeedQuic = fun() ->
    ("1" =/= os:getenv("BUILD_WITHOUT_QUIC")) andalso
        ("true" =/= os:getenv("BUILD_WITHOUT_QUIC"))
end,

Quicer =
    {quicer, {git, "https://github.com/emqx/quic.git", {tag, "0.2.3"}}}.

Dialyzer = fun(Config) ->
    {dialyzer, OldDialyzerConfig} = lists:keyfind(dialyzer, 1, Config),
    Extra = [quicer || NeedQuic()],
    NewDialyzerConfig = [{plt_extra_apps, Extra} | OldDialyzerConfig],
    lists:keystore(
        dialyzer,
        1,
        Config,
        {dialyzer, NewDialyzerConfig}
    )
end.

ExtraDeps = fun(C) ->
    {deps, Deps0} = lists:keyfind(deps, 1, C),
    {erl_opts, ErlOpts0} = lists:keyfind(erl_opts, 1, C),
    IsQuic = NeedQuic(),
    New = [
        {deps, Deps0 ++ [Quicer || IsQuic]},
        {erl_opts, ErlOpts0 ++ [{d, 'BUILD_WITHOUT_QUIC'} || not IsQuic]}
    ],
    lists:foldl(
        fun({Key, _Val} = KV, Acc) ->
            lists:keystore(Key, 1, Acc, KV)
        end,
        C,
        New
    )
end,

Dialyzer(ExtraDeps(CONFIG)).
