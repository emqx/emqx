name: Sync release branch

concurrency:
  group: sync-release-branch-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  schedule:
    - cron:  '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read

jobs:
  create-pr:
    runs-on: ubuntu-22.04

    strategy:
      fail-fast: false
      matrix:
        branch:
          - release-58

    env:
      SYNC_BRANCH: ${{ matrix.branch }}

    defaults:
      run:
        shell: bash

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Generate GitHub App token
        id: app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.AUTH_APP_ID }}
          private-key: ${{ secrets.AUTH_APP_PRIVATE_KEY }}

      - name: Get GitHub App User ID
        id: get-user-id
        run: echo "user-id=$(gh api "/users/${{ steps.app-token.outputs.app-slug }}[bot]" --jq .id)" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}

      - name: Configure git user
        run: |
          git config --global user.name '${{ steps.app-token.outputs.app-slug }}[bot]'
          git config --global user.email '${{ steps.get-user-id.outputs.user-id }}+${{ steps.app-token.outputs.app-slug }}[bot]@users.noreply.github.com>'

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          token: ${{ steps.app-token.outputs.token }}
          fetch-depth: 0

      - name: Merge and create PR
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        run: |
          set -euxo pipefail

          DIFF=$(git rev-list --count HEAD...origin/${SYNC_BRANCH})
          if [ $DIFF -eq 0 ]; then
            echo "No changes in ${SYNC_BRANCH}"
            exit 0
          fi
          NEW_BRANCH_NAME=sync-${SYNC_BRANCH}-$(date +"%Y%m%d-%H%M%S")
          git config --global user.name "${GITHUB_ACTOR}"
          git config --global user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git checkout -b ${NEW_BRANCH_NAME}
          git merge origin/${SYNC_BRANCH} 2>&1 | tee merge.log
          DIFF=$(git rev-list --count master...HEAD)
          if [ $DIFF -eq 0 ]; then
            echo "No changes in ${SYNC_BRANCH}"
            exit 0
          fi
          git push origin ${NEW_BRANCH_NAME}:${NEW_BRANCH_NAME}

          for pr in $(gh pr list --state open --base master --label sync-release-branch --search "Sync ${SYNC_BRANCH} in:title" --repo ${{ github.repository }} --json number --jq '.[] | .number'); do
            gh pr close $pr --repo ${{ github.repository }} --delete-branch || true
          done
          gh pr create --title "Sync ${SYNC_BRANCH}" --body "Sync ${SYNC_BRANCH}" --base master --head ${NEW_BRANCH_NAME} --label sync-release-branch --repo ${{ github.repository }}

      - name: Send notification to Slack
        if: failure()
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          awk '{printf "%s\\n", $0}' merge.log > merge.log.1
          cat <<EOF > payload.json
          {
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "Automatic sync of ${SYNC_BRANCH} branch failed: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "\`\`\`$(cat merge.log.1)\`\`\`"
                }
              }
            ]
          }
          EOF
          curl -X POST -H 'Content-type: application/json' --data @payload.json "$SLACK_WEBHOOK_URL"
