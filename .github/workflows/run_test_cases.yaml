name: Run test case

concurrency:
  group: test-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      builder:
        required: true
        type: string
      ct-matrix:
        required: true
        type: string
      ct-host:
        required: true
        type: string
      ct-docker:
        required: true
        type: string

permissions:
  contents: read

env:
  IS_CI: "yes"

jobs:
  eunit_and_proper:
    runs-on: ${{ github.repository_owner == 'emqx' && fromJSON('["self-hosted","ephemeral","linux","x64"]') || 'ubuntu-22.04' }}
    name: "eunit_and_proper (${{ matrix.profile }})"
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.ct-matrix) }}

    defaults:
      run:
        shell: bash
    container: ${{ inputs.builder }}

    env:
      PROFILE: ${{ matrix.profile }}
      ENABLE_COVER_COMPILE: 1
      CT_COVER_EXPORT_PREFIX: ${{ matrix.profile }}

    steps:
      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: ${{ matrix.profile }}

      - name: extract artifact
        run: |
          unzip -o -q ${{ matrix.profile }}.zip
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
        # produces eunit.coverdata
      - run: make eunit

        # produces proper.coverdata
      - run: make proper

      - run: make cover

      - name: send to coveralls
        if: github.repository == 'emqx/emqx'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: make coveralls

      - run: cat rebar3.crashdump || true
        if: failure()

  ct_docker:
    runs-on: ${{ github.repository_owner == 'emqx' && fromJSON('["self-hosted","ephemeral","linux","x64"]') || 'ubuntu-22.04' }}
    name: "${{ matrix.app }}-${{ matrix.suitegroup }} (${{ matrix.profile }})"
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.ct-docker) }}

    defaults:
      run:
        shell: bash

    env:
      PROFILE: ${{ matrix.profile }}

    steps:
      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: ${{ matrix.profile }}
      - name: extract artifact
        run: |
          unzip -o -q ${{ matrix.profile }}.zip

        # produces $PROFILE-<app-name>-<otp-vsn>-sg<suitegroup>.coverdata
      - name: run common tests
        env:
          DOCKER_CT_RUNNER_IMAGE: ${{ inputs.builder }}
          MONGO_TAG: "5"
          MYSQL_TAG: "8"
          PGSQL_TAG: "13"
          REDIS_TAG: "7.0"
          INFLUXDB_TAG: "2.5.0"
          TDENGINE_TAG: "3.0.2.4"
          OPENTS_TAG: "9aa7f88"
          MINIO_TAG: "RELEASE.2023-03-20T20-16-18Z"
          SUITEGROUP: ${{ matrix.suitegroup }}
          ENABLE_COVER_COMPILE: 1
          CT_COVER_EXPORT_PREFIX: ${{ matrix.profile }}-sg${{ matrix.suitegroup }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/ct/run.sh --ci --app ${{ matrix.app }} --keep-up

      - name: make cover
        run: |
          docker exec -e PROFILE="$PROFILE" -t erlang make cover

      - name: send to coveralls
        if: github.repository == 'emqx/emqx'
        run: |
          ls _build/test/cover/*.coverdata || exit 0
          docker exec -e PROFILE="$PROFILE" -t erlang make coveralls

      - name: rebar3.crashdump
        if: failure()
        run: cat rebar3.crashdump || true

      - name: compress logs
        if: failure()
        run: tar -czf logs.tar.gz _build/test/logs

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: logs-${{ matrix.profile }}-${{ matrix.prefix }}-sg${{ matrix.suitegroup }}
          path: logs.tar.gz
          compression-level: 0
          retention-days: 7

  ct:
    runs-on: ${{ github.repository_owner == 'emqx' && fromJSON('["self-hosted","ephemeral","linux","x64"]') || 'ubuntu-22.04' }}
    name: "${{ matrix.app }}-${{ matrix.suitegroup }} (${{ matrix.profile }})"
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.ct-host) }}

    container: ${{ inputs.builder }}
    defaults:
      run:
        shell: bash

    env:
      PROFILE: ${{ matrix.profile }}
      SUITEGROUP: ${{ matrix.suitegroup }}
      ENABLE_COVER_COMPILE: 1
      CT_COVER_EXPORT_PREFIX: ${{ matrix.profile }}-sg${{ matrix.suitegroup }}

    steps:
      - uses: actions/download-artifact@95815c38cf2ff2164869cbab79da8d1f422bc89e # v4.2.1
        with:
          name: ${{ matrix.profile }}
      - name: extract artifact
        run: |
          unzip -o -q ${{ matrix.profile }}.zip
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

        # produces $PROFILE-<app-name>-<otp-vsn>-sg<suitegroup>.coverdata
      - name: run common tests
        run: make "${{ matrix.app }}-ct"

      - run: make cover

      - name: send to coveralls
        if: github.repository == 'emqx/emqx'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ls _build/test/cover/*.coverdata || exit 0
          make coveralls

      - run: cat rebar3.crashdump || true
        if: failure()

      - name: compress logs
        if: failure()
        run: tar -czf logs.tar.gz _build/test/logs

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: logs-${{ matrix.profile }}-${{ matrix.prefix }}-sg${{ matrix.suitegroup }}
          path: logs.tar.gz
          compression-level: 0
          retention-days: 7

  tests_passed:
    needs:
      - eunit_and_proper
      - ct
      - ct_docker
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false

    permissions:
      pull-requests: write

    steps:
      - name: Coveralls finished
        if: github.repository == 'emqx/emqx'
        uses: coverallsapp/github-action@648a8eb78e6d50909eff900e4ec85cab4524a45b # v2.3.6
        with:
          parallel-finished: true
          git-branch: ${{ github.ref }}
          git-commit: ${{ github.sha }}

      - run: echo "All tests passed"
