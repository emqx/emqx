name: Run test case

concurrency:
  group: test-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_call:
    inputs:
      builder:
        required: true
        type: string
      ct-matrix:
        required: true
        type: string
      ct-host:
        required: true
        type: string
      ct-docker:
        required: true
        type: string
    secrets:
      CODECOV_TOKEN:
        required: false

permissions:
  contents: read

env:
  IS_CI: "yes"

jobs:
  eunit_and_proper:
    runs-on: ${{ github.repository_owner == 'emqx' && 'aws-ubuntu22.04-amd64' || 'ubuntu-22.04' }}
    name: "eunit_and_proper (${{ matrix.profile }})"
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.ct-matrix) }}

    defaults:
      run:
        shell: bash
    container: ${{ inputs.builder }}

    env:
      PROFILE: ${{ matrix.profile }}
      ENABLE_COVER_COMPILE: 1
      CT_COVER_EXPORT_PREFIX: ${{ matrix.profile }}

    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ matrix.profile }}-test

      - name: extract artifact
        run: |
          unzip -o -q ${{ matrix.profile }}-test.zip
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
        # produces eunit.coverdata
      - run: make eunit

        # produces proper.coverdata
      - run: make proper

      # upload coverdata as artifact
      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverdata-${{ matrix.profile }}-eunit-proper
          path: _build/${{ matrix.profile }}-test/cover/*.coverdata
          compression-level: 0
          retention-days: 1

  ct_docker:
    runs-on: ${{ github.repository_owner == 'emqx' && 'aws-ubuntu22.04-amd64' || 'ubuntu-22.04' }}
    name: "${{ matrix.app }}-${{ matrix.suitegroup }} (${{ matrix.profile }})"
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.ct-docker) }}

    defaults:
      run:
        shell: bash

    env:
      PROFILE: ${{ matrix.profile }}

    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ matrix.profile }}-test
      - name: extract artifact
        run: |
          unzip -o -q ${{ matrix.profile }}-test.zip

        # produces $PROFILE-<app-name>-<otp-vsn>-sg<suitegroup>.coverdata
      - name: run common tests
        env:
          DOCKER_CT_RUNNER_IMAGE: ${{ inputs.builder }}
          MONGO_TAG: "5"
          MYSQL_TAG: "8"
          PGSQL_TAG: "13"
          REDIS_TAG: "7.0"
          INFLUXDB_TAG: "2.5.0"
          TDENGINE_TAG: "3.0.2.4"
          OPENTS_TAG: "9aa7f88"
          MINIO_TAG: "RELEASE.2023-03-20T20-16-18Z"
          SUITEGROUP: ${{ matrix.suitegroup }}
          ENABLE_COVER_COMPILE: 1
          CT_COVER_EXPORT_PREFIX: ${{ matrix.profile }}-sg${{ matrix.suitegroup }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./scripts/ct/run.sh --ci --app ${{ matrix.app }} --keep-up

      - name: make cover
        run: |
          docker exec -e PROFILE="$PROFILE" -t erlang make cover

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverdata-${{ matrix.profile }}-${{ matrix.prefix }}-${{ matrix.suitegroup }}
          path: _build/${{ matrix.profile }}-test/cover/*.coverdata
          compression-level: 0
          retention-days: 1

      - name: compress logs
        if: failure()
        run: tar -czf logs.tar.gz _build/${{ matrix.profile }}-test/logs

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: logs-${{ matrix.profile }}-${{ matrix.prefix }}-sg${{ matrix.suitegroup }}
          path: logs.tar.gz
          compression-level: 0
          retention-days: 7

  ct:
    runs-on: ${{ github.repository_owner == 'emqx' && 'aws-ubuntu22.04-amd64' || 'ubuntu-22.04' }}
    name: "${{ matrix.app }}-${{ matrix.suitegroup }} (${{ matrix.profile }})"
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(inputs.ct-host) }}

    container: ${{ inputs.builder }}
    defaults:
      run:
        shell: bash

    env:
      PROFILE: ${{ matrix.profile }}
      SUITEGROUP: ${{ matrix.suitegroup }}
      ENABLE_COVER_COMPILE: 1
      CT_COVER_EXPORT_PREFIX: ${{ matrix.profile }}-sg${{ matrix.suitegroup }}

    steps:
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: ${{ matrix.profile }}-test
      - name: extract artifact
        run: |
          unzip -o -q ${{ matrix.profile }}-test.zip
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

        # produces $PROFILE-<app-name>-<otp-vsn>-sg<suitegroup>.coverdata
      - name: run common tests
        run: make "${{ matrix.app }}-ct"

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverdata-${{ matrix.profile }}-${{ matrix.prefix }}-${{ matrix.suitegroup }}
          path: _build/${{ matrix.profile }}-test/cover/*.coverdata
          compression-level: 0
          retention-days: 1

      - name: compress logs
        if: failure()
        run: tar -czf logs.tar.gz _build/${{ matrix.profile }}-test/logs

      - uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: failure()
        with:
          name: logs-${{ matrix.profile }}-${{ matrix.prefix }}-sg${{ matrix.suitegroup }}
          path: logs.tar.gz
          compression-level: 0
          retention-days: 7

  tests_passed:
    needs:
      - eunit_and_proper
      - ct
      - ct_docker
    runs-on: 'ubuntu-22.04'
    strategy:
      fail-fast: false
    container: ${{ inputs.builder }}

    permissions:
      pull-requests: write

    steps:
      # download emqx-enterprise source code
      - uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          name: emqx-enterprise-test
      - name: extract artifact
        run: |
          unzip -o -q emqx-enterprise-test.zip
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
      # download coverdata artifacts
      - name: download coverdata
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: 'coverdata-*'
      - name: extract coverdata and move to _build/test/cover/
        shell: bash
        run: |
          mkdir -p _build/test/cover/
          # Find and move coverdata files
          coverdata_files=$(find . -name "*.coverdata")
          echo "coverdata_files: $coverdata_files"
          if [ -n "$coverdata_files" ]; then
            while IFS= read -r file; do
              mv "$file" _build/test/cover/
            done <<< "$coverdata_files"
          fi
      - name: convert coverdata to cobertura
        run: |
          ./scripts/covertool-2.1.0-emqx-1 -cover _build/test/cover -appname emqx -lookup apps
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
