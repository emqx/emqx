name: PR Entrypoint

concurrency:
  group: pr-entrypoint-${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

on:
  pull_request:
  workflow_dispatch:
    inputs:
      ref:
        required: false

permissions:
  contents: read

defaults:
  run:
    shell: bash

env:
  IS_CI: "yes"

jobs:
  init:
    runs-on: ubuntu-22.04
    outputs:
      BUILDER_VSN: ${{ steps.env.outputs.BUILDER_VSN }}
      OTP_VSN: ${{ steps.env.outputs.OTP_VSN }}
      ELIXIR_VSN: ${{ steps.env.outputs.ELIXIR_VSN }}
      BUILDER: ${{ steps.env.outputs.BUILDER }}
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.inputs.ref }}
      - name: Set up environment
        id: env
        run: |
          source ./env.sh
          echo "BUILDER_VSN=$EMQX_BUILDER_VSN" | tee -a "$GITHUB_OUTPUT"
          echo "OTP_VSN=$OTP_VSN" | tee -a "$GITHUB_OUTPUT"
          echo "ELIXIR_VSN=$ELIXIR_VSN" | tee -a "$GITHUB_OUTPUT"
          echo "BUILDER=$EMQX_BUILDER" | tee -a "$GITHUB_OUTPUT"

  sanity-checks:
    runs-on: ubuntu-22.04
    needs: init
    container: ${{ needs.init.outputs.BUILDER }}
    outputs:
      ct-matrix: ${{ steps.matrix.outputs.ct-matrix }}
      ct-host: ${{ steps.matrix.outputs.ct-host }}
      ct-docker: ${{ steps.matrix.outputs.ct-docker }}
    env:
      BEFORE_REF: ${{ github.event_name == 'pull_request' && github.event.pull_request.base.sha || github.event.before }}
      AFTER_REF: ${{ github.sha }}
      MIX_ENV: emqx-enterprise
      PROFILE: emqx-enterprise


    steps:
      - name: Install prerequisites
        env:
          DEBIAN_FRONTEND: noninteractive
        run: >
          apt-get update -qy &&
            apt-get install -qy gitlint shellcheck shelltestrunner
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          ref: ${{ github.event.inputs.ref }}
          fetch-depth: 0
      - name: Work around https://github.com/actions/checkout/issues/766
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
      - name: Run gitlint
        run: gitlint --commits $BEFORE_REF..$AFTER_REF --config .github/workflows/.gitlint
      - name: Check changelog file name pattern
        run: ./scripts/check-changes-filename-pattern.sh
      - name: Run shellcheck
        run: ./scripts/shellcheck.sh
      - name: Run shell tests
        run: scripts/shelltest/run_tests.sh
      - name: Check workflow files
        env:
          ACTIONLINT_VSN: 1.6.25
        run: |
          wget -q https://github.com/rhysd/actionlint/releases/download/v${ACTIONLINT_VSN}/actionlint_${ACTIONLINT_VSN}_linux_$(dpkg --print-architecture).tar.gz -O actionlint.tar.gz
          tar zxf actionlint.tar.gz actionlint
          # TODO: enable shellcheck when all the current issues are fixed
          ./actionlint -color \
            -shellcheck= \
            -ignore 'label ".+" is unknown' \
            -ignore 'value "emqx-enterprise" in "exclude"'
      - name: Check line-break at EOF
        run: |
          ./scripts/check-nl-at-eof.sh
      - name: Check apps version
        run: |
          ./scripts/apps-version-check.exs
      - name: Setup mix
        run: |
          mix local.hex --force --if-missing && mix local.rebar --force --if-missing
      - name: Check formatting
        run: |
          ./scripts/check-format.sh
      - name: Run elvis check
        run: |
          ./scripts/elvis-check.sh $GITHUB_BASE_REF
      - name: Generate CT Matrix
        id: matrix
        run: |
          MATRIX="$(./scripts/find-apps.sh --ci)"
          echo "${MATRIX}" | jq
          CT_MATRIX="$(echo "${MATRIX}" | jq -c 'map({profile}) | unique')"
          CT_HOST="$(echo "${MATRIX}"   | jq -c 'map(select(.runner == "host"))')"
          CT_DOCKER="$(echo "${MATRIX}" | jq -c 'map(select(.runner == "docker"))')"
          echo "ct-matrix=${CT_MATRIX}" | tee -a $GITHUB_OUTPUT
          echo "ct-host=${CT_HOST}"     | tee -a $GITHUB_OUTPUT
          echo "ct-docker=${CT_DOCKER}" | tee -a $GITHUB_OUTPUT

  compile:
    needs:
      - init
      - sanity-checks
    strategy:
      matrix:
        build_type:
          - test
          - release
    uses: ./.github/workflows/compile.yaml
    with:
      builder: ${{ needs.init.outputs.BUILDER }}
      build_type: ${{ matrix.build_type }}

  run_test_cases:
    needs:
      - init
      - sanity-checks
      - compile
    permissions:
      contents: read
      pull-requests: write
    uses: ./.github/workflows/run_test_cases.yaml
    with:
      builder: ${{ needs.init.outputs.BUILDER }}
      ct-matrix: ${{ needs.sanity-checks.outputs.ct-matrix }}
      ct-host: ${{ needs.sanity-checks.outputs.ct-host }}
      ct-docker: ${{ needs.sanity-checks.outputs.ct-docker }}
    secrets: inherit

  static_checks:
    needs:
      - init
      - sanity-checks
      - compile
    uses: ./.github/workflows/static_checks.yaml
    with:
      builder: ${{ needs.init.outputs.BUILDER }}
      ct-matrix: ${{ needs.sanity-checks.outputs.ct-matrix }}

  build_slim_packages:
    needs:
      - sanity-checks
    uses: ./.github/workflows/build_slim_packages.yaml

  build_docker_emqx_enterprise:
    needs:
      - init
      - sanity-checks
    uses: ./.github/workflows/build_and_push_docker_images.yaml
    with:
      profile: emqx-enterprise
      publish: false
    secrets: inherit

  spellcheck:
    needs:
      - sanity-checks
      - compile
    uses: ./.github/workflows/spellcheck.yaml

  run_conf_tests:
    needs:
      - init
      - sanity-checks
      - compile
    uses: ./.github/workflows/run_conf_tests.yaml
    with:
      builder: ${{ needs.init.outputs.BUILDER }}

  run_boot_tests:
    needs:
      - init
      - sanity-checks
      - compile
    uses: ./.github/workflows/run_boot_tests.yaml
    with:
      builder: ${{ needs.init.outputs.BUILDER }}

  check_deps_integrity:
    needs:
      - init
      - sanity-checks
    uses: ./.github/workflows/check_deps_integrity.yaml
    with:
      builder: ${{ needs.init.outputs.BUILDER }}

  run_docker_tests:
    needs:
      - sanity-checks
      - build_docker_emqx_enterprise
    uses: ./.github/workflows/run_docker_tests.yaml

  run_helm_tests:
    needs:
      - sanity-checks
      - build_docker_emqx_enterprise
    uses: ./.github/workflows/run_helm_tests.yaml
    secrets: inherit
